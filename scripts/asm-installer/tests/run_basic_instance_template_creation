#!/bin/bash
set -CeEu
set -o pipefail

SPATH="$(readlink -f "$0")"
SDIR="$(dirname "${SPATH}")"; export SDIR;
SCRIPT_NAME="${0##*/}"

# shellcheck source=common.sh
. "${SDIR}/common.sh"

cd "${SDIR}"

main() {
  # CLI setup
  parse_args "$@"

  run_basic_test "install" "mesh_ca" "-o vm -o hub-meshca --enable-registration --enable-gcp-components"
  trap 'cleanup_lt_cluster "${LT_NAMESPACE}" "${OUTPUT_DIR}" "${REV}"' ERR

  create_service_account
  
  echo "Applying WorkloadGroup ${WORKLOAD_NAME} in namespace ${LT_NAMESPACE}..."
  kubectl apply -f - <<EOF
apiVersion: networking.istio.io/v1alpha3
kind: WorkloadGroup
metadata:
  name: ${WORKLOAD_NAME}
  namespace: ${LT_NAMESPACE}
spec:
  metadata:
    annotations:
      security.cloud.google.com/IdentityProvider: google
    labels:
      app: vm
      version: v1
  template:
    serviceAccount: ${WORKLOAD_SERVICE_ACCOUNT}
EOF

  create_instance_template
  trap 'cleanup_service_account' ERR

  verify_instance_template

  cleanup_instance_template
  cleanup_service_account
  cleanup_lt_cluster "${LT_NAMESPACE}" "${OUTPUT_DIR}" "${REV}"
}

main "$@"
