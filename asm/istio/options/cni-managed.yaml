# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# yamllint disable rule:line-length
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: dataplanecontrols.mesh.cloud.google.com
spec:
  group: mesh.cloud.google.com
  names:
    kind: DataPlaneControl
    listKind: DataPlaneControlList
    plural: dataplanecontrols
    singular: dataplanecontrol
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.revision
      name: Revision
      type: string
    - jsonPath: .spec.proxyVersion
      name: Version
      type: string
    - jsonPath: .spec.proxyTargetBasisPoints
      name: TargetBasisPoints
      type: string
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataPlaneControl is the Schema for the data plane controller
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataPlaneControlSpec defines the desired state of data plane
              revisions.
            properties:
              proxyTargetBasisPoints:
                description: ProxyTargetBasisPoints is the basis points (1/10000)
                  of proxies which should be at ProxyVersion. Only auto-injected proxies
                  belonging to Deployments and ReplicaSets in the revision above are
                  considered in the calculation. 0 means that the controller will
                  not auto upgrade any proxy in the cluster. The actual value may
                  vary depending on quantization due to the total number of proxies.
                  Actual value will be rounded down to the nearest value, but never
                  rounded to zero if positive.
                format: int32
                type: integer
              proxyVersion:
                description: ProxyVersion is the target version of the proxy in the
                  cluster.
                type: string
              revision:
                description: Revision is the revision for this cluster entry. Clusters
                  may have more than one revision.
                type: string
            type: object
          status:
            description: DataPlaneControlStatus defines the observed state of data
              plane revisions.
            properties:
              errorDetails:
                description: Error details if the state is an error
                properties:
                  code:
                    description: Error code.
                    format: int32
                    type: integer
                  message:
                    description: Error message.
                    type: string
                type: object
              observedGeneration:
                description: The generation observed by the data plane controller.
                format: int64
                type: integer
              proxyTargetBasisPoints:
                description: ProxyTargetBasisPoints is the actual basis points of
                  proxies at the target version. -1 means unknown.
                format: int32
                type: integer
              state:
                description: Current state of the controller.
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
# yamllint enable rule:line-length
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-cni
  namespace: kube-system
  labels:
    app: istio-cni
    release: istio
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-cni
  labels:
    app: istio-cni
    release: istio
rules:
- apiGroups: [""]
  resources:
  - pods
  - nodes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-cni-repair-role
  labels:
    app: istio-cni
    release: istio
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "delete", "patch", "update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "delete", "patch", "update", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-cni
  labels:
    app: istio-cni
    release: istio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-cni
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-cni-repair-rolebinding
  labels:
    k8s-app: istio-cni-repair
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-cni-repair-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mdp-controller
  labels:
    app: istio-cni
    release: istio
rules:
- apiGroups:
  - mesh.cloud.google.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  - extensions
  resources:
  - daemonsets
  - deployments
  - deployments/finalizers
  - ingresses
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  verbs:
  - '*'
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - "*"
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - pods/eviction
  verbs:
  - '*'
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mdp-controller
  labels:
    k8s-app: mdp-controller
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: mdp-controller
  apiGroup: rbac.authorization.k8s.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: istio-cni-config
  namespace: kube-system
  labels:
    app: istio-cni
    release: istio
data:
  # The CNI network configuration to add to the plugin chain on each node.
  # The special values in this config will be automatically populated.
  cni_network_config: |-
        {
          "cniVersion": "0.3.1",
          "name": "istio-cni",
          "type": "istio-cni",
          "log_level": "info",
          "kubernetes": {
              "kubeconfig": "__KUBECONFIG_FILEPATH__",
              "cni_bin_dir": "/home/kubernetes/bin",
              "exclude_namespaces": [ "istio-system", "kube-system" ]
          }
        }
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: istio-cni-node
  namespace: kube-system
  labels:
    k8s-app: istio-cni-node
    release: istio
spec:
  selector:
    matchLabels:
      k8s-app: istio-cni-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: istio-cni-node
        sidecar.istio.io/inject: "false"
      annotations:
        # This, along with the CriticalAddonsOnly toleration below,
        # marks the pod as a critical add-on, ensuring it gets
        # priority scheduling and that its resources are reserved
        # if it ever gets evicted.
        scheduler.alpha.kubernetes.io/critical-pod: ''
        sidecar.istio.io/inject: "false"
        # Add Prometheus Scrape annotations
        prometheus.io/scrape: 'true'
        prometheus.io/port: "15014"
        prometheus.io/path: '/metrics'
        # Custom annotations
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      # Make sure istio-cni-node gets scheduled on all nodes.
      - effect: NoSchedule
        operator: Exists
      # Mark the pod as a critical add-on for rescheduling.
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      priorityClassName: system-node-critical
      serviceAccountName: istio-cni
      # Minimize downtime during a rolling upgrade or deletion;
      # tell Kubernetes to do a "force deletion":
      # https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 5
      containers:
      # This container installs the Istio CNI binaries
      # and CNI network config file on each node.
      - name: install-cni
        # yamllint disable-line rule:line-length
        image: "IMAGE_HUB/install-cni:IMAGE_TAG"  # {"$ref":"#/definitions/io.k8s.cli.substitutions.gke-cni-image"}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8000
        command: ["install-cni"]
        env:
        # The CNI network config to install on each node.
        - name: CNI_NETWORK_CONFIG
          valueFrom:
            configMapKeyRef:
              name: istio-cni-config
              key: cni_network_config
        - name: CNI_NET_DIR
          value: /etc/cni/net.d
        # Deploy as a standalone CNI plugin or as chained?
        - name: CHAINED_CNI_PLUGIN
          value: "true"
        - name: REPAIR_ENABLED
          value: "true"
        - name: REPAIR_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: REPAIR_LABEL_PODS
          value: "true"
        # Set to true to enable pod deletion
        - name: REPAIR_DELETE_PODS
          value: "true"
        - name: REPAIR_RUN_AS_DAEMON
          value: "true"
        - name: REPAIR_SIDECAR_ANNOTATION
          value: "sidecar.istio.io/status"
        - name: REPAIR_INIT_CONTAINER_NAME
          value: "istio-validation"
        - name: REPAIR_BROKEN_POD_LABEL_KEY
          value: "cni.istio.io/uninitialized"
        - name: REPAIR_BROKEN_POD_LABEL_VALUE
          value: "true"
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
        - mountPath: /var/run/istio-cni
          name: cni-log-dir
      - name: mdp-controller
        # yamllint disable-line rule:line-length
        image: "IMAGE_HUB/mdp:IMAGE_TAG"  # {"$ref":"#/definitions/io.k8s.cli.substitutions.gke-mdp-image"}
        command:
        - mdp
        - server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsUser: 1337
          runAsNonRoot: true
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        env:
        - name: WATCH_NAMESPACE
          value: "istio-system"
        - name: LEADER_ELECTION_NAMESPACE
          value: "istio-system"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: istio-token
      volumes:
      # Used to install CNI.
      - name: cni-bin-dir
        hostPath:
          path: /home/kubernetes/bin
      - name: cni-net-dir
        hostPath:
          path: /etc/cni/net.d
      - name: cni-log-dir
        hostPath:
          path: /var/run/istio-cni
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              path: istio-token
              expirationSeconds: 43200
              # yamllint disable-line rule:line-length
              audience: "PROJECT_ID.svc.id.goog"  # {"$ref":"#/definitions/io.k8s.cli.substitutions.trust-domain"}
